#!/usr/bin/env node --experimental-vm-modules --harmony_async_iteration --harmony_dynamic_import --no-warnings

const Vm = require('vm');
const Fs = require('fs');
const Path = require('path');
const Mod = require('module');
const Ts = require('typescript');


global.ts = Ts;

async function run() {

    const bar = new Vm.Module(`import s from 'typescript';s;`);
    async function resolver(path,parent) {
        return Fs.readFileSync(path,'utf8')
    }
    async function loader(path) {
        return Fs.readFileSync(path,'utf8')
    }
    async function linker(specifier, referencingModule) {
        if (specifier === 'typescript') {
            return new Vm.Module(`export default ts;`, {
                context: referencingModule.context
            });
        }
        throw new Error(`Unable to resolve dependency: ${specifier}`);
    }
    await bar.link(linker);
    try{
        bar.instantiate();

        const { result } = await bar.evaluate();
        console.log("RESULT",result.version);
        const args = process.argv.slice(2);
        const main = args.shift();

        const content = loader(Path.resolve(main));
        console.time("PP");
        console.info(Ts.preProcessFile(content));
        console.timeEnd("PP")
    }catch (e) {
        console.error(e)
    }
}
//run().catch(console.error);


console.info(module);
console.info(
    Mod._resolveFilename('@barlus/node/register', {id,filename,paths}, true)
);